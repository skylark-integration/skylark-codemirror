{"version":3,"sources":["primitives/input/TextareaInput.js"],"names":["define","a","b","c","d","e","f","g","h","i","j","k","l","TextareaInput","[object Object]","cm","this","prevInput","pollingFast","polling","Delayed","hasSelection","composing","display","input","createField","te","textarea","prepareCopyCut","signalDOMEvent","somethingSelected","setLastCopied","lineWise","text","getSelections","options","lineWiseCopyCut","ranges","copyableRanges","type","setSelections","sel_dontScroll","value","join","selectInput","state","cutIncoming","Date","wrapper","insertBefore","firstChild","ios","style","width","on","ie","ie_version","poll","handlePaste","pasteIncoming","fastPoll","scroller","eventInWidget","dispatchEvent","focus","event","Event","clipboardData","lineSpace","e_preventDefault","start","getCursor","range","clear","markText","className","_display","hiddenTextarea","doc","result","prepareSelection","moveInputWithCursor","headPos","cursorCoords","sel","primary","head","wrapOff","getBoundingClientRect","lineOff","lineDiv","teTop","Math","max","min","clientHeight","top","teLeft","clientWidth","left","drawn","removeChildrenAndAdd","cursorDiv","cursors","selectionDiv","selection","typing","contextMenuPending","content","getSelection","focused","readOnly","mobile","activeElt","blur","slowPoll","set","pollInterval","missed","p","isReadOnly","disableInput","keySeq","mac","test","reset","selForContextMenu","first","charCodeAt","execCommand","same","length","runInOp","applyTextInput","slice","indexOf","pos","posFromMouse","scrollPos","scrollTop","presto","resetSelectionOnContextMenu","contains","operation","setSelection","simpleSelection","oldScrollY","oldCSS","cssText","oldWrapperCSS","wrapperBox","offsetParent","prepareSelectAllHack","selectionStart","selected","extval","selectionEnd","rehide","scrollbars","setScrollTop","selectAll","detectingSelectAll","setTimeout","clientY","clientX","webkit","window","scrollY","scrollTo","clearTimeout","captureRightClick","e_stop","mouseup","off","val","disabled","prototype","needsContentAttribute"],"mappings":"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","file":"../../../primitives/input/TextareaInput.js","sourcesContent":["define([\n    '../display/operations',\n    '../display/selection',\n    './input',\n    '../measurement/position_measurement',\n    '../measurement/widgets',\n    '../model/selection',\n    '../model/selection_updates',\n    '../util/browser',\n    '../util/dom',\n    '../util/event',\n    '../util/feature_detection',\n    '../util/misc'\n], function (a, b, c, d, e, f, g, h, i, j, k, l) {\n    'use strict';\n    class TextareaInput {\n        constructor(cm) {\n            this.cm = cm;\n            this.prevInput = '';\n            this.pollingFast = false;\n            this.polling = new l.Delayed();\n            this.hasSelection = false;\n            this.composing = null;\n        }\n        init(display) {\n            let input = this, cm = this.cm;\n            this.createField(display);\n            const te = this.textarea;\n            display.wrapper.insertBefore(this.wrapper, display.wrapper.firstChild);\n            if (h.ios)\n                te.style.width = '0px';\n            j.on(te, 'input', () => {\n                if (h.ie && h.ie_version >= 9 && this.hasSelection)\n                    this.hasSelection = null;\n                input.poll();\n            });\n            j.on(te, 'paste', e => {\n                if (j.signalDOMEvent(cm, e) || c.handlePaste(e, cm))\n                    return;\n                cm.state.pasteIncoming = +new Date();\n                input.fastPoll();\n            });\n            function prepareCopyCut(e) {\n                if (j.signalDOMEvent(cm, e))\n                    return;\n                if (cm.somethingSelected()) {\n                    c.setLastCopied({\n                        lineWise: false,\n                        text: cm.getSelections()\n                    });\n                } else if (!cm.options.lineWiseCopyCut) {\n                    return;\n                } else {\n                    let ranges = c.copyableRanges(cm);\n                    c.setLastCopied({\n                        lineWise: true,\n                        text: ranges.text\n                    });\n                    if (e.type == 'cut') {\n                        cm.setSelections(ranges.ranges, null, l.sel_dontScroll);\n                    } else {\n                        input.prevInput = '';\n                        te.value = ranges.text.join('\\n');\n                        i.selectInput(te);\n                    }\n                }\n                if (e.type == 'cut')\n                    cm.state.cutIncoming = +new Date();\n            }\n            j.on(te, 'cut', prepareCopyCut);\n            j.on(te, 'copy', prepareCopyCut);\n            j.on(display.scroller, 'paste', e => {\n                if (e.eventInWidget(display, e) || j.signalDOMEvent(cm, e))\n                    return;\n                if (!te.dispatchEvent) {\n                    cm.state.pasteIncoming = +new Date();\n                    input.focus();\n                    return;\n                }\n                const event = new Event('paste');\n                event.clipboardData = e.clipboardData;\n                te.dispatchEvent(event);\n            });\n            j.on(display.lineSpace, 'selectstart', e => {\n                if (!e.eventInWidget(display, e))\n                    j.e_preventDefault(e);\n            });\n            j.on(te, 'compositionstart', () => {\n                let start = cm.getCursor('from');\n                if (input.composing)\n                    input.composing.range.clear();\n                input.composing = {\n                    start: start,\n                    range: cm.markText(start, cm.getCursor('to'), { className: 'CodeMirror-composing' })\n                };\n            });\n            j.on(te, 'compositionend', () => {\n                if (input.composing) {\n                    input.poll();\n                    input.composing.range.clear();\n                    input.composing = null;\n                }\n            });\n        }\n        createField(_display) {\n            this.wrapper = c.hiddenTextarea();\n            this.textarea = this.wrapper.firstChild;\n        }\n        prepareSelection() {\n            let cm = this.cm, display = cm.display, doc = cm.doc;\n            let result = b.prepareSelection(cm);\n            if (cm.options.moveInputWithCursor) {\n                let headPos = d.cursorCoords(cm, doc.sel.primary().head, 'div');\n                let wrapOff = display.wrapper.getBoundingClientRect(), lineOff = display.lineDiv.getBoundingClientRect();\n                result.teTop = Math.max(0, Math.min(display.wrapper.clientHeight - 10, headPos.top + lineOff.top - wrapOff.top));\n                result.teLeft = Math.max(0, Math.min(display.wrapper.clientWidth - 10, headPos.left + lineOff.left - wrapOff.left));\n            }\n            return result;\n        }\n        showSelection(drawn) {\n            let cm = this.cm, display = cm.display;\n            i.removeChildrenAndAdd(display.cursorDiv, drawn.cursors);\n            i.removeChildrenAndAdd(display.selectionDiv, drawn.selection);\n            if (drawn.teTop != null) {\n                this.wrapper.style.top = drawn.teTop + 'px';\n                this.wrapper.style.left = drawn.teLeft + 'px';\n            }\n        }\n        reset(typing) {\n            if (this.contextMenuPending || this.composing)\n                return;\n            let cm = this.cm;\n            if (cm.somethingSelected()) {\n                this.prevInput = '';\n                let content = cm.getSelection();\n                this.textarea.value = content;\n                if (cm.state.focused)\n                    i.selectInput(this.textarea);\n                if (h.ie && h.ie_version >= 9)\n                    this.hasSelection = content;\n            } else if (!typing) {\n                this.prevInput = this.textarea.value = '';\n                if (h.ie && h.ie_version >= 9)\n                    this.hasSelection = null;\n            }\n        }\n        getField() {\n            return this.textarea;\n        }\n        supportsTouch() {\n            return false;\n        }\n        focus() {\n            if (this.cm.options.readOnly != 'nocursor' && (!h.mobile || i.activeElt() != this.textarea)) {\n                try {\n                    this.textarea.focus();\n                } catch (e) {\n                }\n            }\n        }\n        blur() {\n            this.textarea.blur();\n        }\n        resetPosition() {\n            this.wrapper.style.top = this.wrapper.style.left = 0;\n        }\n        receivedFocus() {\n            this.slowPoll();\n        }\n        slowPoll() {\n            if (this.pollingFast)\n                return;\n            this.polling.set(this.cm.options.pollInterval, () => {\n                this.poll();\n                if (this.cm.state.focused)\n                    this.slowPoll();\n            });\n        }\n        fastPoll() {\n            let missed = false, input = this;\n            input.pollingFast = true;\n            function p() {\n                let changed = input.poll();\n                if (!changed && !missed) {\n                    missed = true;\n                    input.polling.set(60, p);\n                } else {\n                    input.pollingFast = false;\n                    input.slowPoll();\n                }\n            }\n            input.polling.set(20, p);\n        }\n        poll() {\n            let cm = this.cm, input = this.textarea, prevInput = this.prevInput;\n            if (this.contextMenuPending || !cm.state.focused || k.hasSelection(input) && !prevInput && !this.composing || cm.isReadOnly() || cm.options.disableInput || cm.state.keySeq)\n                return false;\n            let text = input.value;\n            if (text == prevInput && !cm.somethingSelected())\n                return false;\n            if (h.ie && h.ie_version >= 9 && this.hasSelection === text || h.mac && /[\\uf700-\\uf7ff]/.test(text)) {\n                cm.display.input.reset();\n                return false;\n            }\n            if (cm.doc.sel == cm.display.selForContextMenu) {\n                let first = text.charCodeAt(0);\n                if (first == 8203 && !prevInput)\n                    prevInput = '\\u200B';\n                if (first == 8666) {\n                    this.reset();\n                    return this.cm.execCommand('undo');\n                }\n            }\n            let same = 0, l = Math.min(prevInput.length, text.length);\n            while (same < l && prevInput.charCodeAt(same) == text.charCodeAt(same))\n                ++same;\n            a.runInOp(cm, () => {\n                c.applyTextInput(cm, text.slice(same), prevInput.length - same, null, this.composing ? '*compose' : null);\n                if (text.length > 1000 || text.indexOf('\\n') > -1)\n                    input.value = this.prevInput = '';\n                else\n                    this.prevInput = text;\n                if (this.composing) {\n                    this.composing.range.clear();\n                    this.composing.range = cm.markText(this.composing.start, cm.getCursor('to'), { className: 'CodeMirror-composing' });\n                }\n            });\n            return true;\n        }\n        ensurePolled() {\n            if (this.pollingFast && this.poll())\n                this.pollingFast = false;\n        }\n        onKeyPress() {\n            if (h.ie && h.ie_version >= 9)\n                this.hasSelection = null;\n            this.fastPoll();\n        }\n        onContextMenu(e) {\n            let input = this, cm = input.cm, display = cm.display, te = input.textarea;\n            if (input.contextMenuPending)\n                input.contextMenuPending();\n            let pos = d.posFromMouse(cm, e), scrollPos = display.scroller.scrollTop;\n            if (!pos || h.presto)\n                return;\n            let reset = cm.options.resetSelectionOnContextMenu;\n            if (reset && cm.doc.sel.contains(pos) == -1)\n                a.operation(cm, g.setSelection)(cm.doc, f.simpleSelection(pos), l.sel_dontScroll);\n            let oldCSS = te.style.cssText, oldWrapperCSS = input.wrapper.style.cssText;\n            let wrapperBox = input.wrapper.offsetParent.getBoundingClientRect();\n            input.wrapper.style.cssText = 'position: static';\n            te.style.cssText = `position: absolute; width: 30px; height: 30px;\n      top: ${ e.clientY - wrapperBox.top - 5 }px; left: ${ e.clientX - wrapperBox.left - 5 }px;\n      z-index: 1000; background: ${ h.ie ? 'rgba(255, 255, 255, .05)' : 'transparent' };\n      outline: none; border-width: 0; outline: none; overflow: hidden; opacity: .05; filter: alpha(opacity=5);`;\n            let oldScrollY;\n            if (h.webkit)\n                oldScrollY = window.scrollY;\n            display.input.focus();\n            if (h.webkit)\n                window.scrollTo(null, oldScrollY);\n            display.input.reset();\n            if (!cm.somethingSelected())\n                te.value = input.prevInput = ' ';\n            input.contextMenuPending = rehide;\n            display.selForContextMenu = cm.doc.sel;\n            clearTimeout(display.detectingSelectAll);\n            function prepareSelectAllHack() {\n                if (te.selectionStart != null) {\n                    let selected = cm.somethingSelected();\n                    let extval = '\\u200B' + (selected ? te.value : '');\n                    te.value = '\\u21DA';\n                    te.value = extval;\n                    input.prevInput = selected ? '' : '\\u200B';\n                    te.selectionStart = 1;\n                    te.selectionEnd = extval.length;\n                    display.selForContextMenu = cm.doc.sel;\n                }\n            }\n            function rehide() {\n                if (input.contextMenuPending != rehide)\n                    return;\n                input.contextMenuPending = false;\n                input.wrapper.style.cssText = oldWrapperCSS;\n                te.style.cssText = oldCSS;\n                if (h.ie && h.ie_version < 9)\n                    display.scrollbars.setScrollTop(display.scroller.scrollTop = scrollPos);\n                if (te.selectionStart != null) {\n                    if (!h.ie || h.ie && h.ie_version < 9)\n                        prepareSelectAllHack();\n                    let i = 0, poll = () => {\n                            if (display.selForContextMenu == cm.doc.sel && te.selectionStart == 0 && te.selectionEnd > 0 && input.prevInput == '\\u200B') {\n                                a.operation(cm, g.selectAll)(cm);\n                            } else if (i++ < 10) {\n                                display.detectingSelectAll = setTimeout(poll, 500);\n                            } else {\n                                display.selForContextMenu = null;\n                                display.input.reset();\n                            }\n                        };\n                    display.detectingSelectAll = setTimeout(poll, 200);\n                }\n            }\n            if (h.ie && h.ie_version >= 9)\n                prepareSelectAllHack();\n            if (h.captureRightClick) {\n                j.e_stop(e);\n                let mouseup = () => {\n                    j.off(window, 'mouseup', mouseup);\n                    setTimeout(rehide, 20);\n                };\n                j.on(window, 'mouseup', mouseup);\n            } else {\n                setTimeout(rehide, 50);\n            }\n        }\n        readOnlyChanged(val) {\n            if (!val)\n                this.reset();\n            this.textarea.disabled = val == 'nocursor';\n        }\n        setUneditable() {\n        }\n    };\n    TextareaInput.prototype.needsContentAttribute = false;\n\n    return TextareaInput;\n\n});"]}