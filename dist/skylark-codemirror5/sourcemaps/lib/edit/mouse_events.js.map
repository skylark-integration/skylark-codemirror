{"version":3,"sources":["lib/edit/mouse_events.js"],"names":["define","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","DOUBLECLICK_DELAY","PastClick","[object Object]","time","pos","button","this","cmp","lastClick","lastDoubleClick","rangeForUnit","cm","unit","Range","findWordAt","Pos","line","clipPos","doc","result","from","to","gutterEvent","type","prevent","mX","mY","touches","clientX","clientY","Math","floor","display","gutters","getBoundingClientRect","right","e_preventDefault","lineBox","lineDiv","bottom","hasHandler","e_defaultPrevented","top","viewOffset","options","length","childNodes","lineAtHeight","gutter","signal","clickInGutter","onMouseDown","signalDOMEvent","activeTouch","input","supportsTouch","ensurePolled","shift","shiftKey","eventInWidget","webkit","scroller","draggable","setTimeout","posFromMouse","e_button","repeat","now","Date","compare","clickRepeat","window","focus","state","selectingText","event","name","dispatchKey","addModifierNames","bound","commands","done","isReadOnly","suppressEdits","Pass","handleMappedButton","ie","bind","ensureFocus","curOp","activeElt","contained","behavior","option","getOption","value","rect","chromeOS","metaKey","altKey","extend","addNew","mac","ctrlKey","moveOnDrag","configureMouse","sel","dragDrop","dragAndDrop","contains","ranges","xRel","moved","dragEnd","operation","draggingText","off","wrapper","ownerDocument","mouseMove","dragStart","extendSelection","ie_version","body","e2","abs","copy","on","delayBlurEvent","leftButtonStartDrag","start","ourRange","ourIndex","startSel","primary","primIndex","range","extendRange","anchor","head","setSelection","normalizeSelection","concat","scroll","origin","empty","slice","replaceOneSelection","sel_mouse","Selection","lastPos","extendTo","tabSize","startCol","countColumn","getLine","text","ch","posCol","left","min","max","end","lastLine","leftPos","findColumn","push","scrollIntoView","oldRange","minPos","maxPos","anchorLine","sticky","order","getOrder","index","getBidiPartAt","part","leftSide","boundary","level","direction","headIndex","dir","usePart","bidiSimplify","editorSize","counter","Infinity","move","up","history","lastSelOrigin","buttons","curCount","cur","visible","visibleLines","outside","scrollTop","leftButtonSelect","leftButtonDown","e_target","captureRightClick","onContextMenu","contextMenuInGutter"],"mappings":"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","file":"../../../lib/edit/mouse_events.js","sourcesContent":["define([\n    '../display/focus',\n    '../display/operations',\n    '../display/update_lines',\n    '../line/pos',\n    '../line/utils_line',\n    '../measurement/position_measurement',\n    '../measurement/widgets',\n    '../model/selection',\n    '../model/selection_updates',\n    '../util/browser',\n    '../util/bidi',\n    '../util/dom',\n    '../util/event',\n    '../util/feature_detection',\n    '../util/misc',\n    '../input/keymap',\n    './key_events',\n    './commands'\n], function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {\n    'use strict';\n    const DOUBLECLICK_DELAY = 400;\n    class PastClick {\n        constructor(time, pos, button) {\n            this.time = time;\n            this.pos = pos;\n            this.button = button;\n        }\n        compare(time, pos, button) {\n            return this.time + DOUBLECLICK_DELAY > time && d.cmp(pos, this.pos) == 0 && button == this.button;\n        }\n    }\n    let lastClick, lastDoubleClick;\n    function clickRepeat(pos, button) {\n        let now = +new Date();\n        if (lastDoubleClick && lastDoubleClick.compare(now, pos, button)) {\n            lastClick = lastDoubleClick = null;\n            return 'triple';\n        } else if (lastClick && lastClick.compare(now, pos, button)) {\n            lastDoubleClick = new PastClick(now, pos, button);\n            lastClick = null;\n            return 'double';\n        } else {\n            lastClick = new PastClick(now, pos, button);\n            lastDoubleClick = null;\n            return 'single';\n        }\n    }\n    function onMouseDown(e) {\n        let cm = this, display = cm.display;\n        if (m.signalDOMEvent(cm, e) || display.activeTouch && display.input.supportsTouch())\n            return;\n        display.input.ensurePolled();\n        display.shift = e.shiftKey;\n        if (g.eventInWidget(display, e)) {\n            if (!j.webkit) {\n                display.scroller.draggable = false;\n                setTimeout(() => display.scroller.draggable = true, 100);\n            }\n            return;\n        }\n        if (clickInGutter(cm, e))\n            return;\n        let pos = f.posFromMouse(cm, e), button = m.e_button(e), repeat = pos ? clickRepeat(pos, button) : 'single';\n        window.focus();\n        if (button == 1 && cm.state.selectingText)\n            cm.state.selectingText(e);\n        if (pos && handleMappedButton(cm, button, pos, repeat, e))\n            return;\n        if (button == 1) {\n            if (pos)\n                leftButtonDown(cm, pos, repeat, e);\n            else if (m.e_target(e) == display.scroller)\n                m.e_preventDefault(e);\n        } else if (button == 2) {\n            if (pos)\n                i.extendSelection(cm.doc, pos);\n            setTimeout(() => display.input.focus(), 20);\n        } else if (button == 3) {\n            if (j.captureRightClick)\n                cm.display.input.onContextMenu(e);\n            else\n                a.delayBlurEvent(cm);\n        }\n    }\n    function handleMappedButton(cm, button, pos, repeat, event) {\n        let name = 'Click';\n        if (repeat == 'double')\n            name = 'Double' + name;\n        else if (repeat == 'triple')\n            name = 'Triple' + name;\n        name = (button == 1 ? 'Left' : button == 2 ? 'Middle' : 'Right') + name;\n        return q.dispatchKey(cm, p.addModifierNames(name, event), event, bound => {\n            if (typeof bound == 'string')\n                bound = r.commands[bound];\n            if (!bound)\n                return false;\n            let done = false;\n            try {\n                if (cm.isReadOnly())\n                    cm.state.suppressEdits = true;\n                done = bound(cm, pos) != o.Pass;\n            } finally {\n                cm.state.suppressEdits = false;\n            }\n            return done;\n        });\n    }\n    function configureMouse(cm, repeat, event) {\n        let option = cm.getOption('configureMouse');\n        let value = option ? option(cm, repeat, event) : {};\n        if (value.unit == null) {\n            let rect = j.chromeOS ? event.shiftKey && event.metaKey : event.altKey;\n            value.unit = rect ? 'rectangle' : repeat == 'single' ? 'char' : repeat == 'double' ? 'word' : 'line';\n        }\n        if (value.extend == null || cm.doc.extend)\n            value.extend = cm.doc.extend || event.shiftKey;\n        if (value.addNew == null)\n            value.addNew = j.mac ? event.metaKey : event.ctrlKey;\n        if (value.moveOnDrag == null)\n            value.moveOnDrag = !(j.mac ? event.altKey : event.ctrlKey);\n        return value;\n    }\n    function leftButtonDown(cm, pos, repeat, event) {\n        if (j.ie)\n            setTimeout(o.bind(a.ensureFocus, cm), 0);\n        else\n            cm.curOp.focus = l.activeElt();\n        let behavior = configureMouse(cm, repeat, event);\n        let sel = cm.doc.sel, contained;\n        if (cm.options.dragDrop && n.dragAndDrop && !cm.isReadOnly() && repeat == 'single' && (contained = sel.contains(pos)) > -1 && (d.cmp((contained = sel.ranges[contained]).from(), pos) < 0 || pos.xRel > 0) && (d.cmp(contained.to(), pos) > 0 || pos.xRel < 0))\n            leftButtonStartDrag(cm, event, pos, behavior);\n        else\n            leftButtonSelect(cm, event, pos, behavior);\n    }\n    function leftButtonStartDrag(cm, event, pos, behavior) {\n        let display = cm.display, moved = false;\n        let dragEnd = b.operation(cm, e => {\n            if (j.webkit)\n                display.scroller.draggable = false;\n            cm.state.draggingText = false;\n            m.off(display.wrapper.ownerDocument, 'mouseup', dragEnd);\n            m.off(display.wrapper.ownerDocument, 'mousemove', mouseMove);\n            m.off(display.scroller, 'dragstart', dragStart);\n            m.off(display.scroller, 'drop', dragEnd);\n            if (!moved) {\n                m.e_preventDefault(e);\n                if (!behavior.addNew)\n                    i.extendSelection(cm.doc, pos, null, null, behavior.extend);\n                if (j.webkit || j.ie && j.ie_version == 9)\n                    setTimeout(() => {\n                        display.wrapper.ownerDocument.body.focus();\n                        display.input.focus();\n                    }, 20);\n                else\n                    display.input.focus();\n            }\n        });\n        let mouseMove = function (e2) {\n            moved = moved || Math.abs(event.clientX - e2.clientX) + Math.abs(event.clientY - e2.clientY) >= 10;\n        };\n        let dragStart = () => moved = true;\n        if (j.webkit)\n            display.scroller.draggable = true;\n        cm.state.draggingText = dragEnd;\n        dragEnd.copy = !behavior.moveOnDrag;\n        if (display.scroller.dragDrop)\n            display.scroller.dragDrop();\n        m.on(display.wrapper.ownerDocument, 'mouseup', dragEnd);\n        m.on(display.wrapper.ownerDocument, 'mousemove', mouseMove);\n        m.on(display.scroller, 'dragstart', dragStart);\n        m.on(display.scroller, 'drop', dragEnd);\n        a.delayBlurEvent(cm);\n        setTimeout(() => display.input.focus(), 20);\n    }\n    function rangeForUnit(cm, pos, unit) {\n        if (unit == 'char')\n            return new h.Range(pos, pos);\n        if (unit == 'word')\n            return cm.findWordAt(pos);\n        if (unit == 'line')\n            return new h.Range(d.Pos(pos.line, 0), d.clipPos(cm.doc, d.Pos(pos.line + 1, 0)));\n        let result = unit(cm, pos);\n        return new h.Range(result.from, result.to);\n    }\n    function leftButtonSelect(cm, event, start, behavior) {\n        let display = cm.display, doc = cm.doc;\n        m.e_preventDefault(event);\n        let ourRange, ourIndex, startSel = doc.sel, ranges = startSel.ranges;\n        if (behavior.addNew && !behavior.extend) {\n            ourIndex = doc.sel.contains(start);\n            if (ourIndex > -1)\n                ourRange = ranges[ourIndex];\n            else\n                ourRange = new h.Range(start, start);\n        } else {\n            ourRange = doc.sel.primary();\n            ourIndex = doc.sel.primIndex;\n        }\n        if (behavior.unit == 'rectangle') {\n            if (!behavior.addNew)\n                ourRange = new h.Range(start, start);\n            start = f.posFromMouse(cm, event, true, true);\n            ourIndex = -1;\n        } else {\n            let range = rangeForUnit(cm, start, behavior.unit);\n            if (behavior.extend)\n                ourRange = i.extendRange(ourRange, range.anchor, range.head, behavior.extend);\n            else\n                ourRange = range;\n        }\n        if (!behavior.addNew) {\n            ourIndex = 0;\n            i.setSelection(doc, new h.Selection([ourRange], 0), o.sel_mouse);\n            startSel = doc.sel;\n        } else if (ourIndex == -1) {\n            ourIndex = ranges.length;\n            i.setSelection(doc, h.normalizeSelection(cm, ranges.concat([ourRange]), ourIndex), {\n                scroll: false,\n                origin: '*mouse'\n            });\n        } else if (ranges.length > 1 && ranges[ourIndex].empty() && behavior.unit == 'char' && !behavior.extend) {\n            i.setSelection(doc, h.normalizeSelection(cm, ranges.slice(0, ourIndex).concat(ranges.slice(ourIndex + 1)), 0), {\n                scroll: false,\n                origin: '*mouse'\n            });\n            startSel = doc.sel;\n        } else {\n            i.replaceOneSelection(doc, ourIndex, ourRange, o.sel_mouse);\n        }\n        let lastPos = start;\n        function extendTo(pos) {\n            if (d.cmp(lastPos, pos) == 0)\n                return;\n            lastPos = pos;\n            if (behavior.unit == 'rectangle') {\n                let ranges = [], tabSize = cm.options.tabSize;\n                let startCol = o.countColumn(e.getLine(doc, start.line).text, start.ch, tabSize);\n                let posCol = o.countColumn(e.getLine(doc, pos.line).text, pos.ch, tabSize);\n                let left = Math.min(startCol, posCol), right = Math.max(startCol, posCol);\n                for (let line = Math.min(start.line, pos.line), end = Math.min(cm.lastLine(), Math.max(start.line, pos.line)); line <= end; line++) {\n                    let text = e.getLine(doc, line).text, leftPos = o.findColumn(text, left, tabSize);\n                    if (left == right)\n                        ranges.push(new h.Range(d.Pos(line, leftPos), d.Pos(line, leftPos)));\n                    else if (text.length > leftPos)\n                        ranges.push(new h.Range(d.Pos(line, leftPos), d.Pos(line, o.findColumn(text, right, tabSize))));\n                }\n                if (!ranges.length)\n                    ranges.push(new h.Range(start, start));\n                i.setSelection(doc, h.normalizeSelection(cm, startSel.ranges.slice(0, ourIndex).concat(ranges), ourIndex), {\n                    origin: '*mouse',\n                    scroll: false\n                });\n                cm.scrollIntoView(pos);\n            } else {\n                let oldRange = ourRange;\n                let range = rangeForUnit(cm, pos, behavior.unit);\n                let anchor = oldRange.anchor, head;\n                if (d.cmp(range.anchor, anchor) > 0) {\n                    head = range.head;\n                    anchor = d.minPos(oldRange.from(), range.anchor);\n                } else {\n                    head = range.anchor;\n                    anchor = d.maxPos(oldRange.to(), range.head);\n                }\n                let ranges = startSel.ranges.slice(0);\n                ranges[ourIndex] = bidiSimplify(cm, new h.Range(d.clipPos(doc, anchor), head));\n                i.setSelection(doc, h.normalizeSelection(cm, ranges, ourIndex), o.sel_mouse);\n            }\n        }\n        let editorSize = display.wrapper.getBoundingClientRect();\n        let counter = 0;\n        function extend(e) {\n            let curCount = ++counter;\n            let cur = f.posFromMouse(cm, e, true, behavior.unit == 'rectangle');\n            if (!cur)\n                return;\n            if (d.cmp(cur, lastPos) != 0) {\n                cm.curOp.focus = l.activeElt();\n                extendTo(cur);\n                let visible = c.visibleLines(display, doc);\n                if (cur.line >= visible.to || cur.line < visible.from)\n                    setTimeout(b.operation(cm, () => {\n                        if (counter == curCount)\n                            extend(e);\n                    }), 150);\n            } else {\n                let outside = e.clientY < editorSize.top ? -20 : e.clientY > editorSize.bottom ? 20 : 0;\n                if (outside)\n                    setTimeout(b.operation(cm, () => {\n                        if (counter != curCount)\n                            return;\n                        display.scroller.scrollTop += outside;\n                        extend(e);\n                    }), 50);\n            }\n        }\n        function done(e) {\n            cm.state.selectingText = false;\n            counter = Infinity;\n            m.e_preventDefault(e);\n            display.input.focus();\n            m.off(display.wrapper.ownerDocument, 'mousemove', move);\n            m.off(display.wrapper.ownerDocument, 'mouseup', up);\n            doc.history.lastSelOrigin = null;\n        }\n        let move = b.operation(cm, e => {\n            if (e.buttons === 0 || !m.e_button(e))\n                done(e);\n            else\n                extend(e);\n        });\n        let up = b.operation(cm, done);\n        cm.state.selectingText = up;\n        m.on(display.wrapper.ownerDocument, 'mousemove', move);\n        m.on(display.wrapper.ownerDocument, 'mouseup', up);\n    }\n    function bidiSimplify(cm, range) {\n        let {anchor, head} = range, anchorLine = e.getLine(cm.doc, anchor.line);\n        if (d.cmp(anchor, head) == 0 && anchor.sticky == head.sticky)\n            return range;\n        let order = k.getOrder(anchorLine);\n        if (!order)\n            return range;\n        let index = k.getBidiPartAt(order, anchor.ch, anchor.sticky), part = order[index];\n        if (part.from != anchor.ch && part.to != anchor.ch)\n            return range;\n        let boundary = index + (part.from == anchor.ch == (part.level != 1) ? 0 : 1);\n        if (boundary == 0 || boundary == order.length)\n            return range;\n        let leftSide;\n        if (head.line != anchor.line) {\n            leftSide = (head.line - anchor.line) * (cm.doc.direction == 'ltr' ? 1 : -1) > 0;\n        } else {\n            let headIndex = k.getBidiPartAt(order, head.ch, head.sticky);\n            let dir = headIndex - index || (head.ch - anchor.ch) * (part.level == 1 ? -1 : 1);\n            if (headIndex == boundary - 1 || headIndex == boundary)\n                leftSide = dir < 0;\n            else\n                leftSide = dir > 0;\n        }\n        let usePart = order[boundary + (leftSide ? -1 : 0)];\n        let from = leftSide == (usePart.level == 1);\n        let ch = from ? usePart.from : usePart.to, sticky = from ? 'after' : 'before';\n        return anchor.ch == ch && anchor.sticky == sticky ? range : new h.Range(new d.Pos(anchor.line, ch, sticky), head);\n    }\n    function gutterEvent(cm, e, type, prevent) {\n        let mX, mY;\n        if (e.touches) {\n            mX = e.touches[0].clientX;\n            mY = e.touches[0].clientY;\n        } else {\n            try {\n                mX = e.clientX;\n                mY = e.clientY;\n            } catch (e) {\n                return false;\n            }\n        }\n        if (mX >= Math.floor(cm.display.gutters.getBoundingClientRect().right))\n            return false;\n        if (prevent)\n            m.e_preventDefault(e);\n        let display = cm.display;\n        let lineBox = display.lineDiv.getBoundingClientRect();\n        if (mY > lineBox.bottom || !m.hasHandler(cm, type))\n            return m.e_defaultPrevented(e);\n        mY -= lineBox.top - display.viewOffset;\n        for (let i = 0; i < cm.options.gutters.length; ++i) {\n            let g = display.gutters.childNodes[i];\n            if (g && g.getBoundingClientRect().right >= mX) {\n                let line = e.lineAtHeight(cm.doc, mY);\n                let gutter = cm.options.gutters[i];\n                m.signal(cm, type, cm, line, gutter, e);\n                return m.e_defaultPrevented(e);\n            }\n        }\n    }\n    function clickInGutter(cm, e) {\n        return gutterEvent(cm, e, 'gutterClick', true);\n    }\n    function onContextMenu(cm, e) {\n        if (g.eventInWidget(cm.display, e) || contextMenuInGutter(cm, e))\n            return;\n        if (m.signalDOMEvent(cm, e, 'contextmenu'))\n            return;\n        if (!j.captureRightClick)\n            cm.display.input.onContextMenu(e);\n    }\n    function contextMenuInGutter(cm, e) {\n        if (!m.hasHandler(cm, 'gutterContextMenu'))\n            return false;\n        return gutterEvent(cm, e, 'gutterContextMenu', false);\n    }\n    return {\n        onMouseDown: onMouseDown,\n        clickInGutter: clickInGutter,\n        onContextMenu: onContextMenu\n    };\n});"]}