{"version":3,"sources":["primitives/edit/CodeMirror.js"],"names":["define","a","b","c","d","e","f","g","h","i","j","k","Doc","l","m","n","o","p","q","r","s","t","u","v","w","CodeMirror","place","options","this","copyObj","defaults","setGuttersForLineNumbers","doc","value","mode","lineSeparator","direction","modeOption","input","inputStyles","inputStyle","display","Display","wrapper","updateGutters","themeChanged","lineWrapping","className","initScrollbars","state","keyMaps","overlays","modeGen","overwrite","delayingBlurEvent","focused","suppressEdits","pasteIncoming","cutIncoming","selectingText","draggingText","highlight","Delayed","keySeq","specialChars","autofocus","mobile","focus","ie","ie_version","setTimeout","reset","cm","on","scroller","operation","onMouseDown","signalDOMEvent","pos","posFromMouse","clickInGutter","eventInWidget","e_preventDefault","word","findWordAt","extendSelection","anchor","head","onContextMenu","touchFinished","prevTouch","end","finishTouch","activeTouch","Date","farAway","touch","other","left","dx","dy","top","touches","length","radiusX","radiusY","isMouseLikeTouchEvent","ensurePolled","clearTimeout","now","start","moved","prev","pageX","pageY","range","coordsChar","Range","Pos","line","clipPos","setSelection","clientHeight","updateScrollTop","scrollTop","setScrollLeft","scrollLeft","signal","onScrollWheel","dragFunctions","enter","e_stop","over","onDragOver","onDragStart","drop","onDrop","leave","clearDragCursor","inp","getField","onKeyUp","call","onKeyDown","onKeyPress","onFocus","onBlur","registerEventHandlers","ensureGlobalHandlers","startOperation","curOp","forceUpdate","attachDoc","hasFocus","bind","opt","optionHandlers","hasOwnProperty","Init","maybeUpdateLineNumberWidth","finishInit","initHooks","endOperation","webkit","getComputedStyle","lineDiv","textRendering","style","undefined"],"mappings":"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","file":"../../../primitives/edit/CodeMirror.js","sourcesContent":["define([\n    '../display/Display',\n    '../display/focus',\n    '../display/gutters',\n    '../display/line_numbers',\n    '../display/operations',\n    '../display/scrollbars',\n    '../display/scroll_events',\n    '../display/scrolling',\n    '../line/pos',\n    '../measurement/position_measurement',\n    '../measurement/widgets',\n    '../model/Doc',\n    '../model/document_data',\n    '../model/selection',\n    '../model/selection_updates',\n    '../util/browser',\n    '../util/event',\n    '../util/misc',\n    './drop_events',\n    './global_events',\n    './key_events',\n    './mouse_events',\n    './utils',\n    './options'\n], function (a, b, c, d, e, f, g, h, i, j, k, Doc, l, m, n, o, p, q, r, s, t, u, v, w) {\n    'use strict';\n    function CodeMirror(place, options) {\n        if (!(this instanceof CodeMirror))\n            return new CodeMirror(place, options);\n        this.options = options = options ? q.copyObj(options) : {};\n        q.copyObj(w.defaults, options, false);\n        c.setGuttersForLineNumbers(options);\n        let doc = options.value;\n        if (typeof doc == 'string')\n            doc = new Doc(doc, options.mode, null, options.lineSeparator, options.direction);\n        else if (options.mode)\n            doc.modeOption = options.mode;\n        this.doc = doc;\n        let input = new CodeMirror.inputStyles[options.inputStyle](this);\n        let display = this.display = new a.Display(place, doc, input);\n        display.wrapper.CodeMirror = this;\n        c.updateGutters(this);\n        v.themeChanged(this);\n        if (options.lineWrapping)\n            this.display.wrapper.className += ' CodeMirror-wrap';\n        f.initScrollbars(this);\n        this.state = {\n            keyMaps: [],\n            overlays: [],\n            modeGen: 0,\n            overwrite: false,\n            delayingBlurEvent: false,\n            focused: false,\n            suppressEdits: false,\n            pasteIncoming: -1,\n            cutIncoming: -1,\n            selectingText: false,\n            draggingText: false,\n            highlight: new q.Delayed(),\n            keySeq: null,\n            specialChars: null\n        };\n        if (options.autofocus && !o.mobile)\n            display.input.focus();\n        if (o.ie && o.ie_version < 11)\n            setTimeout(() => this.display.input.reset(true), 20);\n        registerEventHandlers(this);\n        s.ensureGlobalHandlers();\n        e.startOperation(this);\n        this.curOp.forceUpdate = true;\n        l.attachDoc(this, doc);\n        if (options.autofocus && !o.mobile || this.hasFocus())\n            setTimeout(q.bind(b.onFocus, this), 20);\n        else\n            b.onBlur(this);\n        for (let opt in w.optionHandlers)\n            if (w.optionHandlers.hasOwnProperty(opt))\n                w.optionHandlers[opt](this, options[opt], w.Init);\n        d.maybeUpdateLineNumberWidth(this);\n        if (options.finishInit)\n            options.finishInit(this);\n        for (let i = 0; i < initHooks.length; ++i)\n            initHooks[i](this);\n        e.endOperation(this);\n        if (o.webkit && options.lineWrapping && getComputedStyle(display.lineDiv).textRendering == 'optimizelegibility')\n            display.lineDiv.style.textRendering = 'auto';\n    }\n    CodeMirror.undefined = w.defaults;\n    CodeMirror.undefined = w.optionHandlers;\n    return CodeMirror;\n    function registerEventHandlers(cm) {\n        let d = cm.display;\n        p.on(d.scroller, 'mousedown', e.operation(cm, u.onMouseDown));\n        if (o.ie && o.ie_version < 11)\n            p.on(d.scroller, 'dblclick', e.operation(cm, e => {\n                if (p.signalDOMEvent(cm, e))\n                    return;\n                let pos = j.posFromMouse(cm, e);\n                if (!pos || u.clickInGutter(cm, e) || k.eventInWidget(cm.display, e))\n                    return;\n                p.e_preventDefault(e);\n                let word = cm.findWordAt(pos);\n                n.extendSelection(cm.doc, word.anchor, word.head);\n            }));\n        else\n            p.on(d.scroller, 'dblclick', e => p.signalDOMEvent(cm, e) || p.e_preventDefault(e));\n        p.on(d.scroller, 'contextmenu', e => u.onContextMenu(cm, e));\n        let touchFinished, prevTouch = { end: 0 };\n        function finishTouch() {\n            if (d.activeTouch) {\n                touchFinished = setTimeout(() => d.activeTouch = null, 1000);\n                prevTouch = d.activeTouch;\n                prevTouch.end = +new Date();\n            }\n        }\n        function isMouseLikeTouchEvent(e) {\n            if (e.touches.length != 1)\n                return false;\n            let touch = e.touches[0];\n            return touch.radiusX <= 1 && touch.radiusY <= 1;\n        }\n        function farAway(touch, other) {\n            if (other.left == null)\n                return true;\n            let dx = other.left - touch.left, dy = other.top - touch.top;\n            return dx * dx + dy * dy > 20 * 20;\n        }\n        p.on(d.scroller, 'touchstart', e => {\n            if (!p.signalDOMEvent(cm, e) && !isMouseLikeTouchEvent(e) && !u.clickInGutter(cm, e)) {\n                d.input.ensurePolled();\n                clearTimeout(touchFinished);\n                let now = +new Date();\n                d.activeTouch = {\n                    start: now,\n                    moved: false,\n                    prev: now - prevTouch.end <= 300 ? prevTouch : null\n                };\n                if (e.touches.length == 1) {\n                    d.activeTouch.left = e.touches[0].pageX;\n                    d.activeTouch.top = e.touches[0].pageY;\n                }\n            }\n        });\n        p.on(d.scroller, 'touchmove', () => {\n            if (d.activeTouch)\n                d.activeTouch.moved = true;\n        });\n        p.on(d.scroller, 'touchend', e => {\n            let touch = d.activeTouch;\n            if (touch && !k.eventInWidget(d, e) && touch.left != null && !touch.moved && new Date() - touch.start < 300) {\n                let pos = cm.coordsChar(d.activeTouch, 'page'), range;\n                if (!touch.prev || farAway(touch, touch.prev))\n                    range = new m.Range(pos, pos);\n                else if (!touch.prev.prev || farAway(touch, touch.prev.prev))\n                    range = cm.findWordAt(pos);\n                else\n                    range = new m.Range(i.Pos(pos.line, 0), i.clipPos(cm.doc, i.Pos(pos.line + 1, 0)));\n                cm.setSelection(range.anchor, range.head);\n                cm.focus();\n                p.e_preventDefault(e);\n            }\n            finishTouch();\n        });\n        p.on(d.scroller, 'touchcancel', finishTouch);\n        p.on(d.scroller, 'scroll', () => {\n            if (d.scroller.clientHeight) {\n                h.updateScrollTop(cm, d.scroller.scrollTop);\n                h.setScrollLeft(cm, d.scroller.scrollLeft, true);\n                p.signal(cm, 'scroll', cm);\n            }\n        });\n        p.on(d.scroller, 'mousewheel', e => g.onScrollWheel(cm, e));\n        p.on(d.scroller, 'DOMMouseScroll', e => g.onScrollWheel(cm, e));\n        p.on(d.wrapper, 'scroll', () => d.wrapper.scrollTop = d.wrapper.scrollLeft = 0);\n        d.dragFunctions = {\n            enter: e => {\n                if (!p.signalDOMEvent(cm, e))\n                    p.e_stop(e);\n            },\n            over: e => {\n                if (!p.signalDOMEvent(cm, e)) {\n                    r.onDragOver(cm, e);\n                    p.e_stop(e);\n                }\n            },\n            start: e => r.onDragStart(cm, e),\n            drop: e.operation(cm, r.onDrop),\n            leave: e => {\n                if (!p.signalDOMEvent(cm, e)) {\n                    r.clearDragCursor(cm);\n                }\n            }\n        };\n        let inp = d.input.getField();\n        p.on(inp, 'keyup', e => t.onKeyUp.call(cm, e));\n        p.on(inp, 'keydown', e.operation(cm, t.onKeyDown));\n        p.on(inp, 'keypress', e.operation(cm, t.onKeyPress));\n        p.on(inp, 'focus', e => b.onFocus(cm, e));\n        p.on(inp, 'blur', e => b.onBlur(cm, e));\n    }\n    let initHooks = [];\n    CodeMirror.defineInitHook = f => initHooks.push(f);\n\n    return CodeMirror;\n});"]}