{"version":3,"sources":["primitives/edit/fromTextArea.js"],"names":["define","a","b","c","d","fromTextArea","textarea","options","copyObj","value","tabindex","tabIndex","placeholder","autofocus","hasFocus","activeElt","getAttribute","document","body","save","cm","getValue","realSubmit","form","on","leaveSubmitMethodAlone","submit","wrappedSubmit","e","finishInit","getTextArea","toTextArea","isNaN","parentNode","removeChild","getWrapperElement","style","display","off","CodeMirror","node","insertBefore","nextSibling"],"mappings":";;;;;;;AAAAA,QACI,eACA,cACA,gBACA,gBACD,SAAUC,EAAGC,EAAGC,EAAGC,GAClB,aAmDA,OAASC,aAlDT,SAAsBC,EAAUC,GAO5B,IANAA,EAAUA,EAAUH,EAAEI,QAAQD,OACtBE,MAAQH,EAASG,OACpBF,EAAQG,UAAYJ,EAASK,WAC9BJ,EAAQG,SAAWJ,EAASK,WAC3BJ,EAAQK,aAAeN,EAASM,cACjCL,EAAQK,YAAcN,EAASM,aACV,MAArBL,EAAQM,UAAmB,CAC3B,IAAIC,EAAWZ,EAAEa,YACjBR,EAAQM,UAAYC,GAAYR,GAAkD,MAAtCA,EAASU,aAAa,cAAwBF,GAAYG,SAASC,KAEnH,SAASC,IACLb,EAASG,MAAQW,EAAGC,WAExB,IAAIC,EACJ,GAAIhB,EAASiB,OACTpB,EAAEqB,GAAGlB,EAASiB,KAAM,SAAUJ,IACzBZ,EAAQkB,wBAAwB,CACjC,IAAIF,EAAOjB,EAASiB,KACpBD,EAAaC,EAAKG,OAClB,IACI,IAAIC,EAAgBJ,EAAKG,OAAS,MAC9BP,IACAI,EAAKG,OAASJ,EACdC,EAAKG,SACLH,EAAKG,OAASC,IAEpB,MAAOC,KAIjBrB,EAAQsB,WAAaT,CAAAA,IACjBA,EAAGD,KAAOA,EACVC,EAAGU,YAAc,KAAMxB,GACvBc,EAAGW,WAAa,MACZX,EAAGW,WAAaC,MAChBb,IACAb,EAAS2B,WAAWC,YAAYd,EAAGe,qBACnC7B,EAAS8B,MAAMC,QAAU,GACrB/B,EAASiB,OACTpB,EAAEmC,IAAIhC,EAASiB,KAAM,SAAUJ,GACI,mBAAxBb,EAASiB,KAAKG,SACrBpB,EAASiB,KAAKG,OAASJ,QAIvChB,EAAS8B,MAAMC,QAAU,OACzB,IAAIjB,EAAKnB,EAAEsC,WAAWC,GAAQlC,EAAS2B,WAAWQ,aAAaD,EAAMlC,EAASoC,aAAcnC,GAC5F,OAAOa","file":"../../../primitives/edit/fromTextArea.js","sourcesContent":["define([\n    './CodeMirror',\n    '../util/dom',\n    '../util/event',\n    '../util/misc'\n], function (a, b, c, d) {\n    'use strict';\n    function fromTextArea(textarea, options) {\n        options = options ? d.copyObj(options) : {};\n        options.value = textarea.value;\n        if (!options.tabindex && textarea.tabIndex)\n            options.tabindex = textarea.tabIndex;\n        if (!options.placeholder && textarea.placeholder)\n            options.placeholder = textarea.placeholder;\n        if (options.autofocus == null) {\n            let hasFocus = b.activeElt();\n            options.autofocus = hasFocus == textarea || textarea.getAttribute('autofocus') != null && hasFocus == document.body;\n        }\n        function save() {\n            textarea.value = cm.getValue();\n        }\n        let realSubmit;\n        if (textarea.form) {\n            c.on(textarea.form, 'submit', save);\n            if (!options.leaveSubmitMethodAlone) {\n                let form = textarea.form;\n                realSubmit = form.submit;\n                try {\n                    let wrappedSubmit = form.submit = () => {\n                        save();\n                        form.submit = realSubmit;\n                        form.submit();\n                        form.submit = wrappedSubmit;\n                    };\n                } catch (e) {\n                }\n            }\n        }\n        options.finishInit = cm => {\n            cm.save = save;\n            cm.getTextArea = () => textarea;\n            cm.toTextArea = () => {\n                cm.toTextArea = isNaN;\n                save();\n                textarea.parentNode.removeChild(cm.getWrapperElement());\n                textarea.style.display = '';\n                if (textarea.form) {\n                    c.off(textarea.form, 'submit', save);\n                    if (typeof textarea.form.submit == 'function')\n                        textarea.form.submit = realSubmit;\n                }\n            };\n        };\n        textarea.style.display = 'none';\n        let cm = a.CodeMirror(node => textarea.parentNode.insertBefore(node, textarea.nextSibling), options);\n        return cm;\n    }\n    return { fromTextArea: fromTextArea };\n});"]}